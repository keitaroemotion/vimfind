#!/usr/bin/env ruby
require 'colorize'

def disp_instruction() abort "\nyou need argument.\n".red end
terms =  ARGV.size > 0 ? ARGV.map{ |arg| arg.downcase } : disp_instruction
grep_mode = ARGV.include?("-g")
terms.delete("-g")

def file_open()
  File.open(file, "r").read.downcase rescue ""
end

def is_term_in_file(file, terms)
  text = file_open(file, "r") 
  terms.select{|term| text.include?(term)}.size > 0
end

def includes(file, terms, grep_mode)
  if grep_mode
    File.file?(file) && is_term_in_file(file, terms)
  else  
    (terms.select{|term| file.downcase.include?(term) }.size == terms.size) 
  end
end

def replace(text, terms)
  terms.each { |term| text = text.gsub(term, "#{term.green}") }
  text
end

Dir.glob("**/*").select{|file| includes(file, terms, grep_mode) }.each do |f|
  print "#{replace(f, terms)} ? [y/n/q]"
  input = $stdin.gets.chomp.downcase
  system "vim #{f}" if input == "y"
  abort if input == "q"
end

