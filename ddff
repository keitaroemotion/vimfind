#!/usr/bin/env ruby

require "colorize"

option = $*[0]

diff       = `git diff develop --name-only`
files = diff.split("\n")

puts diff.yellow

puts "#{files.size} Files"
puts

def index
  print "\n[enter number: ] "
  choice = $stdin.gets.chomp
  abort if choice.downcase == "q"
  choice
end

def fff(files)
  files = files.select {|f| f.end_with?("_test.rb") }
  files.each_with_index do |tfile, i|
    puts "#{i}: #{tfile.green}"
  end
  i = index
  if i.nil? || i == "all"
    files.each do |file|
      command = "bundle exec ruby -I test #{file} --verbose"
      puts "command: #{command}".green
      system command
    end
  elsif !/[^0-9]/.match(i).nil?  
    fff(files.select {|file| file.include?(i)})
  else  
    command = "bundle exec ruby -I test #{files[i.to_i]} --verbose"
    puts "command: #{command}".green
    system command
  end  
end

def open_file(kw, files)
  files = files.select{|x| x.include?(kw) } if !kw.nil?
  files.each_with_index do |file, i|
    puts "#{i}: #{file.green}"
  end
  i = index
  if !/^[0-9]/.match(i).nil?
    system "vim #{files[i.to_i]}"
  else
    open_file i, files
  end
end

case option 
when "/t"
  fff files
when "/"
  open_file $*[1], files
when "//"
  system files.inject("vim"){ |acc, file| "#{acc} #{file}" } 
when "/r"  
  files.select{|f| f.end_with?(".rb")}.each do |file|
    p = `rubocop #{file}`
    unless "#{p}".include? "no offense"
      system "rubocop #{file}"
      $stdin.gets.chomp
    end
  end
when "help", "-h", "--help"
  puts ""
  puts "/t         ... test (ruby)"
  puts "/r         ... rubocop"
  puts "/         ... open a file after reading it."
  puts "//         ... open all files after reading it."
  puts "help, -h ... help option"
  puts ""
else
  open_file $*[1], files
end
